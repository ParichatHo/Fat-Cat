generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Owners {
  owner_id   Int       @id @default(autoincrement())
  first_name String
  last_name  String
  phone      String
  email      String    @unique
  address    String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
  pets       Pets[]
}

model PetTypes {
  type_id   Int      @id @default(autoincrement())
  type_name String
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  pets      Pets[]
}

model Pets {
  pet_id         Int              @id @default(autoincrement())
  pet_name       String
  birth_date     DateTime
  breed_name     String
  gender         String
  owner_id       Int
  type_id        Int
  image_url      String?            
  weight         Float? 
  createdAt      DateTime         @default(now())
  updatedAt      DateTime?        @updatedAt
  medicalRecords MedicalRecords[]
  owner          Owners           @relation(fields: [owner_id], references: [owner_id])
  type           PetTypes         @relation(fields: [type_id], references: [type_id])
}

model Veterinarians {
  vet_id         Int              @id @default(autoincrement())
  license_number String           @unique
  experience     Int?
  education      String?
  user_id        Int              @unique
  createdAt      DateTime         @default(now())
  updatedAt      DateTime?        @updatedAt
  medicalRecords MedicalRecords[]
  user           Users            @relation("UserVeterinarian", fields: [user_id], references: [user_id])
}

model Users {
  user_id      Int             @id @default(autoincrement())
  first_name   String
  last_name    String
  email        String          @unique
  password     String
  phone        String
  role         UserRole
  image_url    String? 
  createdAt    DateTime        @default(now())
  updatedAt    DateTime?       @updatedAt
  veterinarian Veterinarians?  @relation("UserVeterinarian")

  @@index([role])
}

model MedicalRecords {
  record_id         Int                @id @default(autoincrement())
  pet_id            Int
  vet_id            Int?               // Made optional with ?
  visit_date        DateTime
  symptoms          String
  diagnosis         String
  treatment         String
  medication        String
  notes             String
  appointment_date  DateTime?
  status            AppointmentStatus?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime?          @updatedAt
  pet               Pets               @relation(fields: [pet_id], references: [pet_id])
  vet               Veterinarians?     @relation(fields: [vet_id], references: [vet_id]) // Made optional with ?
}

enum UserRole {
  VETERINARIAN
  STAFF
  ADMIN
}

enum AppointmentStatus {
  SCHEDULED
  COMPLETED
  CANCELLED
}
